version: 2.1

# Define the jobs we want to run for this project
jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build 1
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build
          
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
       - restore_cache:
          keys: [frontend-build]
       - run:
          name: front-end build
          command: |
            cd frontend
            npm install
            npm run test
      
      # Checkout code from git
      # Restore from cache
      # Your job code here
                
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - restore_cache:
          keys: [backend-build]
      - run:
          name: back-end build
          command: |
            cd backend
            npm install
            npm run test
      # Checkout code from git
      # Restore from cache
      # Your job code here
  scan-frontencleard:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: front-end build
          command: |
              cd frontend
              npm install
              npm audit --audit-level=critical
      # Checkout code from git
      # Restore from cache
      # Your job code here

  scan-backend:
    docker:
      - image: circleci/node:13.8.0      # Docker image here
    steps:
      - restore_cache:
          keys: [backend-build]
      - run:
          name: back-end build
          command: |
            cd backend
            npm install
            npm npm audit --audit-level=critical
      # Checkout code from git
      # Restore from cache
      # Your job code here
  # deploy-infrastructure:
  #   docker:
  #     - image: amazon/aws-cli 
  #   steps:
  #     # Checkout code from git
  #     - run:
  #         name: Ensure back-end infrastructure exists
  #         command: |
  #           aws cloudformation deploy \
  #             --template-file .circleci/files/backend.yml \
  #             # --stack-name "your back-end stack name with workflow id" \
  #             # --parameter-overrides ID="your workflow id"  
  #             exit 1
  #     - run:
  #         name: Ensure front-end infrastructure exist
  #         command: |
  #           aws cloudformation deploy \
  #             --template-file .circleci/files/frontend.yml \
  #             #--tags project=your-tag \
  #             # --stack-name "your front-end stack name with workflow id" \
  #             # --parameter-overrides ID="your workflow id"  
  #             exit 1
  #     - run:
  #         name: Add back-end ip to ansible inventory
  #         command: |
  #           # Your code here
  #           exit 1
  #     - persist_to_workspace:
  #         root: ~/
  #         paths:
  #           - project/.circleci/ansible/inventory.txt
      # Here's where you will add some code to rollback on failure   

            

# Orchestrate our job run sequence
workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-frontend]
      - scan-backend:
          requires: [build-backend]

          
